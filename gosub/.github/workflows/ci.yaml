name: Gosub Continuous Integration (CI)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust_version: [ stable, nightly, 1.73.0 ]
        os: [ ubuntu-latest ]
#        rust_version: [ stable, beta, nightly, 1.73.0, "stable minus 1 release", "stable minus 2 releases" ]
#        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_version }}
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: ~/.cargo/
          key: ${{ matrix.os }}-cargo-registry-${{ matrix.rust_version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-registry-${{ matrix.rust_version }}-
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: ~/work/gosub-engine/gosub-engine/target
          key: ${{ matrix.os }}-cargo-target-${{ matrix.rust_version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-target-${{ matrix.rust_version }}-
      - name: Build
        run: cargo build --verbose --all --all-features
      - name: Clean
        run: |
          cargo install cargo-sweep
          cargo sweep --installed
          cargo sweep --time 7

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust_version: [ stable, nightly, 1.73.0 ]
        os: [ ubuntu-latest ]
#        rust_version: [ stable, beta, nightly, 1.73.0, "stable minus 1 release", "stable minus 2 releases" ]
#        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - name: Print CPU info
        run: lscpu
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_version }}
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ matrix.os }}-cargo-registry-${{ matrix.rust_version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-registry-${{ matrix.rust_version }}-
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: ~/work/gosub-engine/gosub-engine/target
          key: ${{ matrix.os }}-cargo-target-${{ matrix.rust_version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-target-${{ matrix.rust_version }}-
      - name: Run tests
        run: cargo test --verbose --all --no-fail-fast --all-features --all-targets

  clippy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust_version: [ stable, nightly ]
        os: [ ubuntu-latest ]
#        rust_version: [ stable, beta, nightly, 1.73.0, "stable minus 1 release", "stable minus 2 releases" ]
#        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_version }}
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ matrix.os }}-cargo-registry-${{ matrix.rust_version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-registry-${{ matrix.rust_version }}-
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: ~/work/gosub-engine/gosub-engine/target
          key: ${{ matrix.os }}-cargo-target-${{ matrix.rust_version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-target-${{ matrix.rust_version }}-
      - name: Run Clippy
        run: cargo clippy --all --tests -- -D warnings

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-registry-${{ matrix.rust_version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-${{ matrix.rust_version }}-
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: ~/work/gosub-engine/gosub-engine/target
          key: ${{ runner.os }}-cargo-target-${{ matrix.rust_version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ matrix.rust_version }}-
      - name: Run fmt
        run: cargo fmt --check --all
